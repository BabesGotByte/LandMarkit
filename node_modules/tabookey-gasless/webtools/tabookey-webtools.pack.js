/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/js/webtools/webtools.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./src/js/relayclient/IRelayHub.js":
/*!*****************************************!*\
  !*** ./src/js/relayclient/IRelayHub.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports=[{\"constant\":false,\"inputs\":[{\"name\":\"transactionFee\",\"type\":\"uint256\"},{\"name\":\"url\",\"type\":\"string\"}],\"name\":\"registerRelay\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"relay\",\"type\":\"address\"},{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"encodedFunction\",\"type\":\"bytes\"},{\"name\":\"transactionFee\",\"type\":\"uint256\"},{\"name\":\"gasPrice\",\"type\":\"uint256\"},{\"name\":\"gasLimit\",\"type\":\"uint256\"},{\"name\":\"nonce\",\"type\":\"uint256\"},{\"name\":\"signature\",\"type\":\"bytes\"},{\"name\":\"approvalData\",\"type\":\"bytes\"}],\"name\":\"canRelay\",\"outputs\":[{\"name\":\"status\",\"type\":\"uint256\"},{\"name\":\"recipientContext\",\"type\":\"bytes\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"}],\"name\":\"getNonce\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"unsignedTx\",\"type\":\"bytes\"},{\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"penalizeIllegalTransaction\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"encodedFunction\",\"type\":\"bytes\"},{\"name\":\"transactionFee\",\"type\":\"uint256\"},{\"name\":\"gasPrice\",\"type\":\"uint256\"},{\"name\":\"gasLimit\",\"type\":\"uint256\"},{\"name\":\"nonce\",\"type\":\"uint256\"},{\"name\":\"signature\",\"type\":\"bytes\"},{\"name\":\"approvalData\",\"type\":\"bytes\"}],\"name\":\"relayCall\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"relayedCallStipend\",\"type\":\"uint256\"}],\"name\":\"requiredGas\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"target\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"relay\",\"type\":\"address\"}],\"name\":\"getRelay\",\"outputs\":[{\"name\":\"totalStake\",\"type\":\"uint256\"},{\"name\":\"unstakeDelay\",\"type\":\"uint256\"},{\"name\":\"unstakeTime\",\"type\":\"uint256\"},{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"state\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"relayedCallStipend\",\"type\":\"uint256\"},{\"name\":\"gasPrice\",\"type\":\"uint256\"},{\"name\":\"transactionFee\",\"type\":\"uint256\"}],\"name\":\"maxPossibleCharge\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"unsignedTx1\",\"type\":\"bytes\"},{\"name\":\"signature1\",\"type\":\"bytes\"},{\"name\":\"unsignedTx2\",\"type\":\"bytes\"},{\"name\":\"signature2\",\"type\":\"bytes\"}],\"name\":\"penalizeRepeatedNonce\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"target\",\"type\":\"address\"}],\"name\":\"depositFor\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"relayaddr\",\"type\":\"address\"},{\"name\":\"unstakeDelay\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"relay\",\"type\":\"address\"}],\"name\":\"removeRelayByOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"relay\",\"type\":\"address\"}],\"name\":\"unstake\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"relay\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"stake\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"unstakeDelay\",\"type\":\"uint256\"}],\"name\":\"Staked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"relay\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"transactionFee\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"stake\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"unstakeDelay\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"url\",\"type\":\"string\"}],\"name\":\"RelayAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"relay\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"unstakeTime\",\"type\":\"uint256\"}],\"name\":\"RelayRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"relay\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"stake\",\"type\":\"uint256\"}],\"name\":\"Unstaked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"dest\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"relay\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"selector\",\"type\":\"bytes4\"},{\"indexed\":false,\"name\":\"reason\",\"type\":\"uint256\"}],\"name\":\"CanRelayFailed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"relay\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"selector\",\"type\":\"bytes4\"},{\"indexed\":false,\"name\":\"status\",\"type\":\"uint8\"},{\"indexed\":false,\"name\":\"charge\",\"type\":\"uint256\"}],\"name\":\"TransactionRelayed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"relay\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Penalized\",\"type\":\"event\"}]\n\n//# sourceURL=webpack:///./src/js/relayclient/IRelayHub.js?");

/***/ }),

/***/ "./src/js/relayclient/IRelayRecipient.js":
/*!***********************************************!*\
  !*** ./src/js/relayclient/IRelayRecipient.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports=[{\"constant\":true,\"inputs\":[],\"name\":\"getHubAddr\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"context\",\"type\":\"bytes\"}],\"name\":\"preRelayedCall\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"relay\",\"type\":\"address\"},{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"encodedFunction\",\"type\":\"bytes\"},{\"name\":\"transactionFee\",\"type\":\"uint256\"},{\"name\":\"gasPrice\",\"type\":\"uint256\"},{\"name\":\"gasLimit\",\"type\":\"uint256\"},{\"name\":\"nonce\",\"type\":\"uint256\"},{\"name\":\"approvalData\",\"type\":\"bytes\"},{\"name\":\"maxPossibleCharge\",\"type\":\"uint256\"}],\"name\":\"acceptRelayedCall\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"bytes\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getRecipientBalance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"context\",\"type\":\"bytes\"},{\"name\":\"success\",\"type\":\"bool\"},{\"name\":\"actualCharge\",\"type\":\"uint256\"},{\"name\":\"preRetVal\",\"type\":\"bytes32\"}],\"name\":\"postRelayedCall\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\n\n//# sourceURL=webpack:///./src/js/relayclient/IRelayRecipient.js?");

/***/ }),

/***/ "./src/js/webtools/contractmanager.js":
/*!********************************************!*\
  !*** ./src/js/webtools/contractmanager.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* global web3 */\nconst utils = __webpack_require__(/*! ./utils */ \"./src/js/webtools/utils.js\")\nconst promisify = utils.promisify\nconst IRelayHub = __webpack_require__(/*! ../relayclient/IRelayHub */ \"./src/js/relayclient/IRelayHub.js\")\nconst IRelayRecipient = __webpack_require__(/*! ../relayclient/IRelayRecipient */ \"./src/js/relayclient/IRelayRecipient.js\")\n\nconst RelayHub = web3.eth.contract(IRelayHub)\nconst RelayRecipient = web3.eth.contract(IRelayRecipient)\n\nclass ContractManager {\n\n    constructor() {\n        utils.checkNetwork(web3)\n    }\n\n    log() {\n        utils.log(Array.prototype.slice.call(arguments).join(\" \"))\n    }\n\n    saveForm(form) {\n        utils.saveForm(form, 'contractmanager')\n    }\n\n    loadForm(form) {\n        utils.loadForm(form, 'contractmanager')\n    }\n\n    async getRelayHub(addr) {\n\n        let recipient = RelayRecipient.at(addr)\n\n        let hubaddr = await promisify(recipient.getHubAddr)()\n\n        if (!hubaddr || hubaddr === '0x')\n            return undefined\n\n        return RelayHub.at(hubaddr)\n    }\n\n    async checkBalance(addr) {\n\n        console.log( \"addr=\", addr)\n\n        let hub = await this.getRelayHub(addr)\n\n        if (!hub) {\n            this.log(\"ERROR: no hub (address not a RelayRecipient?)\")\n            return\n        }\n\n        let r = await promisify(hub.balanceOf)(addr)\n        this.log(\"Balance of contract on Relay Hub: \" + addr + \" = \" + (r / 1e18) + \" eth\")\n        this.log(\"hub addr=\",hub.address)\n        return r\n    }\n\n    async depositFor(addr, eth_amount) {\n\n        let hub = await this.getRelayHub(addr)\n        console.log(\"hub=\", hub)\n        hub.depositFor(addr, {from: web3.eth.accounts[0], value: eth_amount * 1e18}, (e) => {\n            if (e) {\n                this.log(\"failed deposit: \" + e)\n                return false\n            } else {\n                this.log(\"deposited \" + eth_amount + \" to \" + addr + \". wait for confirmation..\")\n                return true\n            }\n        })\n    }\n}\n\nmodule.exports = ContractManager\n\n\n//# sourceURL=webpack:///./src/js/webtools/contractmanager.js?");

/***/ }),

/***/ "./src/js/webtools/relaymanager.js":
/*!*****************************************!*\
  !*** ./src/js/webtools/relaymanager.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* global web3 */\nconst utils = __webpack_require__(/*! ./utils */ \"./src/js/webtools/utils.js\")\nconst promisify = utils.promisify\nconst IRelayHub = __webpack_require__(/*! ../relayclient/IRelayHub */ \"./src/js/relayclient/IRelayHub.js\")\n\nconst RelayHub = web3.eth.contract(IRelayHub)\nconst networkVersions = { 1: \"Mainnet\", 42: \"Kovan\", 3: \"Ropsten\", 4: \"Rinkeby\", 100: \"xdai mainnet\", 1337 : \"Local-geth\" }\n\nclass RelayManager {\n\n    constructor() {\n        utils.checkNetwork(web3)\n    }\n\n    log() {\n        utils.log(Array.prototype.slice.call(arguments).join(\" \"))\n    }\n\n    async getHub(hubaddr) {\n\n        return RelayHub.at(hubaddr)\n    }\n\n    saveForm(form) {\n        utils.saveForm(form, 'relaymanager')\n    }\n\n    loadForm(form) {\n        utils.loadForm(form, 'relaymanager')\n    }\n\n    async saveHubAndOwner(hubaddr, owneracct) {\n\n        let node = await promisify(web3.version.getNode)();\n        let ver = web3.version.network;\n        this.log( \"network node: \", node , \"version: <b>\", networkVersions[ver] || ver, \"</b>\" )\n\n        if ( !web3.eth.accounts || ! web3.eth.accounts.length ) {\n            this.log( \"<b>No accounts - login into metamask</b>\")\n        }\n        \n        this.owner = owneracct\n        this.hub = await this.getHub(hubaddr)\n\n        this.log(\"= Hub address = \", this.hub.address, \"owner=\", this.owner)\n    }\n\n    async checkRelay(relayurl, newBalance, newStake, newDelay) {\n        // this.log( \"checkRelay: url=\"+relayurl, 'bal='+newBalance, 'stake='+newStake, 'del='+newDelay)\n        let httpget\n        try {\n            httpget = await utils.httpreq(relayurl.replace(/\\/?\\s*$/, \"/getaddr\"));\n        } catch (e) {\n            this.log(\"failed to connect to: \" + relayurl + \": \" + JSON.stringify(e))\n            return\n        }\n        let resp = JSON.parse(httpget.response)\n        let relayaddr = resp.RelayServerAddress\n\n        console.log(\"relay addr=\", relayaddr, \"ready=\", resp.Ready, \"hub=\", this.hub.address)\n\n        let relayInfo = await promisify(this.hub.getRelay)(relayaddr)\n        let currentOwner = relayInfo[3]\n        if (currentOwner == '0x') {\n            this.log(\"unable to check relay - check if hub is deployed at that address\")\n            return\n        }\n\n        let owner = web3.eth.accounts[this.owner||0]\n\n        if (currentOwner == '0x0000000000000000000000000000000000000000') {\n            this.log(\"Relay not owned: waiting for owner\")\n        } else if (currentOwner.toLowerCase() == owner.toLowerCase()) {\n            this.log(\"Relay ready\")\n        } else {\n            this.log(\"NOT OUR RELAY: owned by: \" + currentOwner)\n        }\n\n        let balance = (await promisify(web3.eth.getBalance)(relayaddr)) / 1e18\n        this.log(\"current balance=\", balance)\n\n        let stake = relayInfo[0] / 1e18\n        this.log(\"current stake=\", stake)\n\n        if (newStake) {\n            let diffStake = newStake - stake\n            if (diffStake > 0) {\n\n                let delayUnit = (newDelay || \"30s\").match(/^([\\d.]+)\\s*([smhd])/)\n                if (!delayUnit)\n                    return this.log(\"invalid Stake time: must be {number} {sec|min|hour|day}\")\n\n                let units = {'s': 1, 'm': 60, 'h': 3600, 'd': 3600 * 24}\n                //convert \"1.5m\" into 90\n                let delay = delayUnit[1] * units[delayUnit[2]]\n\n                await promisify(this.hub.stake)(relayaddr, delay, {from: owner, value: diffStake * 1e18})\n                this.log(\"staked\")\n            } else {\n                this.log(\"Stake unmodified\")\n            }\n        }\n        if (newBalance) {\n            let diffBalance = newBalance - balance\n\n            //don't refill until at least half of the target balance got used..\n            if (diffBalance / newBalance > 0.5) {\n                await promisify(web3.eth.sendTransaction)({from: owner, to: relayaddr, value: diffBalance * 1e18})\n                balance = await promisify(web3.eth.getBalance)(relayaddr)\n                this.log(\"added balance\")\n            } else {\n                this.log(\"Balance unmodified\")\n            }\n        }\n    }\n}\n\nmodule.exports = RelayManager\n\n//# sourceURL=webpack:///./src/js/webtools/relaymanager.js?");

/***/ }),

/***/ "./src/js/webtools/utils.js":
/*!**********************************!*\
  !*** ./src/js/webtools/utils.js ***!
  \**********************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("\nmodule.exports = {\n\n    checkNetwork: function(web3) {\n\n        setTimeout(()=>{\n            let ver = web3.version.network\n\n            web3.version.getNetwork((e,r)=>{\n                if ( r != ver ) {\n                    console.log(\"ERROR: Metamask version mismatch\", r, \"!=\", ver)\n                    console.log(\"Probably Metamask didn't notice ganache restart. Switch network, and back\")\n                }\n            })\n\n        }, 100)\n    },\n\n    //dump log string into <div id='logpanel'> (or to console log, if no such panel)\n    log: function () {\n        let argstr = Array.prototype.slice.call(arguments).join(\" \");\n        if (window && window.logpanel)\n            {\n                window.logpanel.innerHTML += \"\\n\" + argstr + \"<br>\"\n            }\n        else console.log(argstr)\n    },\n\n    promisify: function (f) {\n        return function () {\n            let args = Array.prototype.slice.call(arguments)\n            return new Promise((resolve, reject) => {\n                args.push((e, r) => {\n                    if (e) return reject(e)\n                    else return resolve(r)\n                })\n                f.apply(null, args)\n            })\n        }\n    },\n\n    saveCookie: function (name, val) {\n        document.cookie = name + '=' + val\n    },\n\n    getCookie: function (name, def) {\n        let c = document.cookie.match(\"\\\\b\" + name + \"=([^;]*)\")\n        return c ? c[1] : def\n    },\n\n    httpreq: function (url, options) {\n        return new Promise((resolve, reject) => {\n            module.exports.asyncHttpReq(url, options, (e, r) => {\n                if (e) return reject(e)\n                return resolve(r)\n            })\n        })\n    },\n\n    asyncHttpReq: function (url, options, cb) {\n        options = options || {}\n        let headers = options.headers || {}\n\n        let data\n        if (options.json) {\n            data = JSON.stringify(options.json)\n            headers[\"Content-Type\"] = \"application/json\"\n        } else {\n            data = options.data\n        }\n\n        let method = options.method || ( data ? \"POST\" : \"GET\")\n\n        let xhttp = new XMLHttpRequest();\n        for (let hv in headers) {\n            console.log(hv)\n            // xhttp.addRequestHeader(h, v)\n        }\n        xhttp.onreadystatechange = function () {\n            if (this.readyState != 4)\n                return\n            if (this.status == 0)\n                return cb({error: 0}, null)\n            let stat = Math.trunc(this.status / 100)\n            if (stat < 2)\n                return  //100 continue?\n            if (stat == 2) {\n                return cb(null, {\n                    status: this.status, statusText: this.statusText,\n                    response: this.response,\n                    json: options.json ? JSON.parse(this.resultText) : undefined,\n                })\n            }\n            if (stat == 3) {\n                //todo: redirect\n                return cb({\"redirect\": this}, null)\n            }\n            //must be >=400\n            cb(this, null)\n        };\n        xhttp.open(method, url, true);\n        xhttp.send();\n    },\n\n    //from a given html <form> (or <div>), save all input members that are of type 'text'\n    // fields are saved into a cookie with the given name.\n    saveForm: function(form, cookieName) {\n        let ret = Array.prototype.slice.call(form.getElementsByTagName('*'))\n            .filter(a => a.type == 'text')\n            .map(c => c.id + \"=\" + c.value)\n            .join(\"~\")\n        console.log( \"saving cookie\", cookieName, '=', ret.split(\"~\"))\n        this.saveCookie(cookieName, ret)\n    },\n\n    //reload form from cookies.\n    // the form and cookie must match those given to saveForm\n    loadForm: function(form, cookieName) {\n        let val = module.exports.getCookie(cookieName)\n        if (!val) return\n        console.log( \"loading cookie:\", val.split(\"~\"))\n        val.split(\"~\").forEach(s => {\n            let nameval = s.match(/\\b([^=]+)=(.*)/);\n            if (nameval) {\n                let itemname = nameval[1];\n                val = nameval[2]\n                if (form.children[itemname])\n                    form.children[itemname].value = val\n                else\n                    console.log(\"name not found for  \" + name + \"=\" + val, 'in', val)\n            } else\n                console.log(\"invalid cookie value \" + s)\n        })\n    }\n\n}\n\n//# sourceURL=webpack:///./src/js/webtools/utils.js?");

/***/ }),

/***/ "./src/js/webtools/webtools.js":
/*!*************************************!*\
  !*** ./src/js/webtools/webtools.js ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("\nlet ContractManager = __webpack_require__( /*! ./contractmanager.js */ \"./src/js/webtools/contractmanager.js\" )\nlet RelayManager = __webpack_require__( /*! ./relaymanager.js */ \"./src/js/webtools/relaymanager.js\" )\n// let AddPastEvents = require( '../relayclient/addPastEvents.js')\n\n// eslint-disable-next-line no-undef\nwebtools = {\n\tContractManager,\n\tRelayManager,\n\t// AddPastEvents,\n}\n\n\n//# sourceURL=webpack:///./src/js/webtools/webtools.js?");

/***/ })

/******/ });